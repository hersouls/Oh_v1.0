# 🎧 Moonwave 오안나 음악 플레이어 개발 체크리스트

> **"평범함에서 특별함으로" - 13곡의 음악 여정을 위한 완전한 개발 가이드**  
> 문유와 Cursor의 역할 분담 및 세부 작업 체크리스트

---

## 📋 목차
1. [프로젝트 초기 설정](#프로젝트-초기-설정)
2. [기술 스택 설정](#기술-스택-설정)
3. [프로젝트 구조 설정](#프로젝트-구조-설정)
4. [UI/UX 컴포넌트 개발](#uiux-컴포넌트-개발)
5. [음악 플레이어 기능](#음악-플레이어-기능)
6. [페이지 개발](#페이지-개발)
7. [데이터 및 콘텐츠](#데이터-및-콘텐츠)
8. [성능 최적화](#성능-최적화)
9. [배포 및 인프라](#배포-및-인프라)
10. [테스트 및 품질 관리](#테스트-및-품질-관리)

---

## 🚀 프로젝트 초기 설정

### 1.1 프로젝트 생성 및 기본 설정

#### 문유 작업
- [x] GitHub 저장소 `hersouls/Oh_v1.0` 생성
- [x] 프로젝트 README.md 작성 (프로젝트 개요, 기술 스택, 설치 방법)
- [x] 도메인 `oh.moonwave.kr` DNS 설정
- [ ] GitHub Pages 설정 (gh-pages 브랜치 자동 배포)

#### Cursor 작업
- [x] Vite + React + TypeScript 프로젝트 생성
- [x] 기본 프로젝트 구조 설정 (`src/`, `public/`, `docs/`)
- [x] ESLint, Prettier 설정
- [x] Git 초기 설정 및 첫 커밋

### 1.2 개발 환경 설정

#### 문유 작업
- [x] 개발용 도메인 설정 (로컬 개발 환경)
- [x] 음원 파일 준비 (13곡 MP3 파일)
- [x] 커버 이미지 준비 (13곡 커버 이미지)
- [x] Moonwave 로고 파일 준비

#### Cursor 작업
- [x] Node.js 버전 설정 (v18+)
- [x] 개발 서버 설정 (포트 3000)
- [x] 핫 리로드 설정
- [x] 빌드 스크립트 설정

---

## 🛠️ 기술 스택 설정

### 2.1 핵심 의존성 설치

#### Cursor 작업
- [x] React 18 설치 및 설정
- [x] TypeScript 설정 (`tsconfig.json`)
- [x] Vite 설정 (`vite.config.ts`)
- [x] Tailwind CSS 설치 및 설정
- [ ] Catalyst UI 설치 및 설정

### 2.2 추가 라이브러리 설치

#### Cursor 작업
- [x] React Router DOM 설치 (라우팅)
- [x] 아이콘 라이브러리 설치 (`@heroicons/react`, `lucide-react`)
- [x] 유틸리티 라이브러리 설치 (`clsx`, `tailwind-merge`)
- [ ] 오디오 관련 라이브러리 설치 (필요시)

### 2.3 설정 파일 구성

#### Cursor 작업
- [x] `tailwind.config.js` 설정 (Moonwave 브랜드 컬러, Pretendard 폰트)
- [x] `package.json` 스크립트 설정 (dev, build, preview)
- [x] TypeScript 타입 정의 파일 생성
- [ ] 환경 변수 설정 (`.env`)

---

## 📁 프로젝트 구조 설정

### 3.1 디렉토리 구조 생성

#### Cursor 작업
- [x] `src/components/` 디렉토리 생성
  - [x] `src/components/ui/` (기본 UI 컴포넌트)
  - [x] `src/components/player/` (음악 플레이어 컴포넌트)
  - [x] `src/components/layout/` (레이아웃 컴포넌트)
  - [x] `src/components/intro/` (인트로 페이지 컴포넌트)
- [x] `src/pages/` 디렉토리 생성
- [x] `src/hooks/` 디렉토리 생성
- [x] `src/utils/` 디렉토리 생성
- [x] `src/types/` 디렉토리 생성
- [x] `src/styles/` 디렉토리 생성

### 3.2 정적 파일 구조

#### 문유 작업
- [x] `public/music/` 디렉토리 생성 및 13곡 MP3 파일 업로드
- [x] `public/covers/` 디렉토리 생성 및 13곡 커버 이미지 업로드
- [x] `public/moonwave_log.png` 업로드 (PWA 앱 아이콘)
- [ ] `public/sample-tracks.json` 생성 (트랙 메타데이터)

#### Cursor 작업
- [x] `public/manifest.json` 생성 (PWA 설정)
- [x] `public/robots.txt` 생성
- [ ] `public/favicon.ico` 설정
- [x] `public/CNAME` 파일 생성 (도메인 설정)

---

## 🎨 UI/UX 컴포넌트 개발

### 4.1 기본 UI 컴포넌트

#### Cursor 작업
- [x] `Button` 컴포넌트 개발 (글래스모피즘 스타일)
- [x] `Card` 컴포넌트 개발 (트랙 카드용)
- [x] `Typography` 컴포넌트 개발 (한글 최적화)
- [x] `Loading` 컴포넌트 개발
- [ ] `Modal` 컴포넌트 개발 (필요시)

### 4.2 음악 플레이어 컴포넌트

#### Cursor 작업
- [x] `AudioPlayer` 컴포넌트 개발
  - [x] 재생/정지 기능
  - [x] 진행바 (Slider)
  - [x] 볼륨 조절
  - [x] 시간 표시
- [x] `TrackCard` 컴포넌트 개발
  - [x] 커버 이미지 표시
  - [x] 재생 버튼 오버레이
  - [x] 트랙 정보 표시
- [ ] `LyricsSync` 컴포넌트 개발
  - [ ] 실시간 가사 하이라이트
  - [ ] 오디오 시간과 싱크
- [x] `PlayerControls` 컴포넌트 개발
  - [x] 이전/다음 곡 버튼
  - [x] 반복/셔플 버튼
  - [ ] 다운로드 버튼

### 4.3 레이아웃 컴포넌트

#### Cursor 작업
- [x] `Header` 컴포넌트 개발
  - [x] Moonwave 로고
  - [x] 네비게이션 메뉴
  - [x] 반응형 디자인
- [ ] `Footer` 컴포넌트 개발 (필요시)
- [x] `Layout` 컴포넌트 개발
  - [x] 고정 헤더
  - [ ] 고정 플레이어
  - [x] 메인 콘텐츠 영역

### 4.4 인트로 페이지 컴포넌트

#### Cursor 작업
- [x] `IntroPage` 컴포넌트 개발
  - [x] 그라디언트 배경
  - [x] 애니메이션 효과
  - [x] 시작 버튼
- [x] `AboutPage` 컴포넌트 개발
  - [x] 오안나 프로필
  - [x] 타임라인
  - [x] 스토리 섹션

---

## 🎵 음악 플레이어 기능

### 5.1 오디오 처리

#### Cursor 작업
- [ ] HTML5 Audio API 구현
- [ ] 오디오 상태 관리 (useState, useRef)
- [ ] 오디오 이벤트 핸들러 구현
  - [ ] `onTimeUpdate`
  - [ ] `onEnded`
  - [ ] `onError`
- [ ] 오디오 프리로딩 구현

### 5.2 플레이어 상태 관리

#### Cursor 작업
- [ ] `usePlayerState` 훅 개발
  - [ ] 현재 트랙 상태
  - [ ] 재생/정지 상태
  - [ ] 현재 시간/총 시간
  - [ ] 볼륨 상태
- [ ] Context API 설정 (PlayerContext)
- [ ] 로컬 스토리지 연동 (재생 상태 저장)

### 5.3 플레이어 기능 구현

#### Cursor 작업
- [ ] 재생/정지 토글 기능
- [ ] 진행바 드래그 기능
- [ ] 볼륨 조절 기능
- [ ] 이전/다음 곡 이동 기능
- [ ] 반복 모드 기능
- [ ] 셔플 기능 (선택사항)

### 5.4 가사 싱크 기능

#### Cursor 작업
- [ ] 가사 데이터 구조 설계
- [ ] 실시간 가사 하이라이트 구현
- [ ] 오디오 시간과 가사 매칭 알고리즘
- [ ] 가사 스크롤 자동화
- [ ] 가사 타이밍 조정 기능

---

## 📄 페이지 개발

### 6.1 라우팅 설정

#### Cursor 작업
- [ ] React Router 설정
- [ ] 라우트 구조 설계
  - [ ] `/` (인트로/메인)
  - [ ] `/tracks` (트랙 리스트)
  - [ ] `/track/:id` (트랙 상세)
  - [ ] `/about` (오안나 소개)
- [ ] 404 페이지 구현

### 6.2 인트로 페이지

#### Cursor 작업
- [ ] 인트로 페이지 레이아웃 구현
- [ ] 애니메이션 효과 추가
- [ ] "음악으로 만나기" 버튼 구현
- [ ] 첫 방문 감지 로직
- [ ] 반응형 디자인 적용

### 6.3 메인 페이지 (트랙 리스트)

#### Cursor 작업
- [ ] 트랙 그리드 레이아웃 구현
- [ ] 트랙 카드 렌더링
- [ ] 트랙 검색 기능 (선택사항)
- [ ] 트랙 필터링 기능 (선택사항)
- [ ] 무한 스크롤 또는 페이지네이션

### 6.4 상세 뷰 페이지

#### Cursor 작업
- [ ] 트랙 정보 표시 영역
- [ ] 탭 네비게이션 구현
  - [ ] 가사 탭
  - [ ] 해석 탭
  - [ ] 싱크 탭
- [ ] 탭 콘텐츠 렌더링
- [ ] 뒤로가기 기능
- [ ] 공유 기능 (선택사항)

### 6.5 오안나 소개 페이지

#### Cursor 작업
- [ ] 프로필 섹션 구현
- [ ] 타임라인 컴포넌트 구현
- [ ] 스토리 섹션 구현
- [ ] 이미지 갤러리 (선택사항)
- [ ] 음악 듣기 버튼

---

## 📊 데이터 및 콘텐츠

### 7.1 데이터 구조 설계

#### Cursor 작업
- [ ] Track 인터페이스 정의
- [ ] SyncLine 인터페이스 정의
- [ ] PlayerState 인터페이스 정의
- [ ] AppState 인터페이스 정의

### 7.2 트랙 데이터 준비

#### 문유 작업
- [ ] 13곡 메타데이터 작성
  - [ ] 곡 제목
  - [ ] 아티스트 (문유)
  - [ ] 설명
  - [ ] 가사
  - [ ] 해석
- [ ] 가사 싱크 데이터 작성
  - [ ] 시간별 가사 매칭
  - [ ] 정확한 타이밍 조정
- [ ] `sample-tracks.json` 파일 완성

### 7.3 오안나 콘텐츠 준비

#### 문유 작업
- [ ] 오안나 프로필 정보 정리
- [ ] 타임라인 데이터 작성
  - [ ] 2014년: 리듬체조 시작
  - [ ] 2022년: 주니어 국가대표 선발
  - [ ] 2024년: 시니어 국가대표팀 활동
- [ ] 스토리 섹션 콘텐츠 작성
- [ ] 인용구 및 핵심 메시지 정리

### 7.4 이미지 및 미디어

#### 문유 작업
- [ ] 13곡 커버 이미지 디자인/준비
- [ ] 오안나 프로필 이미지 준비
- [ ] Moonwave 브랜드 이미지 준비
- [ ] PWA 아이콘 이미지 준비

---

## ⚡ 성능 최적화

### 8.1 코드 최적화

#### Cursor 작업
- [ ] React.memo 적용 (불필요한 리렌더링 방지)
- [ ] useMemo, useCallback 최적화
- [ ] 코드 스플리팅 구현
- [ ] 지연 로딩 (Lazy Loading) 구현

### 8.2 이미지 최적화

#### Cursor 작업
- [ ] 이미지 압축 및 최적화
- [ ] WebP 포맷 지원
- [ ] 반응형 이미지 구현
- [ ] 이미지 프리로딩 구현

### 8.3 오디오 최적화

#### Cursor 작업
- [ ] 오디오 파일 압축
- [ ] 오디오 스트리밍 최적화
- [ ] 오디오 캐싱 전략
- [ ] 오디오 버퍼링 최적화

### 8.4 번들 최적화

#### Cursor 작업
- [ ] Vite 빌드 최적화 설정
- [ ] 번들 크기 분석
- [ ] Tree shaking 최적화
- [ ] 청크 분할 전략

---

## 🚀 배포 및 인프라

### 9.1 GitHub Actions 설정

#### Cursor 작업
- [ ] `.github/workflows/deploy.yml` 생성
- [ ] 자동 배포 파이프라인 설정
- [ ] 빌드 테스트 자동화
- [ ] 배포 알림 설정

### 9.2 PWA 설정

#### Cursor 작업
- [ ] `manifest.json` 완성
- [ ] Service Worker 구현
- [ ] 오프라인 지원
- [ ] 앱 설치 프롬프트

### 9.3 도메인 설정

#### 문유 작업
- [ ] `oh.moonwave.kr` DNS 설정
- [ ] SSL 인증서 설정
- [ ] HTTPS 리다이렉트 설정
- [ ] 도메인 연결 테스트

### 9.4 모니터링 설정

#### Cursor 작업
- [ ] 에러 로깅 설정
- [ ] 성능 모니터링 설정
- [ ] 사용자 분석 도구 설정
- [ ] 가용성 모니터링

---

## 🧪 테스트 및 품질 관리

### 10.1 단위 테스트

#### Cursor 작업
- [x] Jest 설정
- [x] React Testing Library 설정
- [x] 컴포넌트 테스트 작성
  - [x] Player 컴포넌트 테스트
  - [x] TrackCard 컴포넌트 테스트
  - [x] LyricsSync 컴포넌트 테스트
- [x] 훅 테스트 작성

### 10.2 통합 테스트

#### Cursor 작업
- [ ] 페이지 통합 테스트
- [ ] 오디오 플레이어 통합 테스트
- [ ] 라우팅 테스트
- [ ] 상태 관리 테스트

### 10.3 E2E 테스트

#### Cursor 작업
- [x] Playwright 설정
- [x] 사용자 시나리오 테스트
  - [x] 음악 재생 플로우
  - [x] 가사 싱크 테스트
  - [x] 반응형 디자인 테스트
- [x] 크로스 브라우저 테스트

### 10.4 성능 테스트

#### Cursor 작업
- [ ] Lighthouse 성능 테스트
- [ ] Core Web Vitals 측정
- [ ] 로딩 속도 최적화
- [ ] 모바일 성능 테스트

### 10.5 접근성 테스트

#### Cursor 작업
- [ ] WCAG 2.1 AA 준수 확인
- [ ] 키보드 네비게이션 테스트
- [ ] 스크린 리더 호환성 테스트
- [ ] 색상 대비 검증

---

## 📱 모바일 최적화

### 11.1 반응형 디자인

#### Cursor 작업
- [ ] 모바일 우선 디자인 적용
- [ ] 터치 친화적 인터페이스
- [ ] 스와이프 제스처 지원
- [ ] 가로 모드 대응

### 11.2 PWA 기능

#### Cursor 작업
- [ ] 앱 설치 프롬프트
- [ ] 오프라인 기능
- [ ] 홈 화면 추가
- [ ] 푸시 알림 (선택사항)

### 11.3 성능 최적화

#### Cursor 작업
- [ ] 모바일 네트워크 최적화
- [ ] 배터리 사용량 최적화
- [ ] 메모리 사용량 최적화
- [ ] 로딩 시간 최적화

---

## 🎨 디자인 시스템

### 12.1 브랜드 가이드라인

#### Cursor 작업
- [x] Moonwave 브랜드 컬러 적용
- [x] Pretendard 폰트 설정
- [x] 타이포그래피 스케일 적용
- [x] 아이콘 시스템 구축

### 12.2 컴포넌트 라이브러리

#### Cursor 작업
- [x] 디자인 토큰 정의
- [x] 컴포넌트 스타일 가이드
- [x] 애니메이션 가이드라인
- [x] 반응형 브레이크포인트

### 12.3 글래스모피즘 효과

#### Cursor 작업
- [x] 글래스 카드 컴포넌트
- [x] 블러 효과 구현
- [x] 투명도 및 그림자 효과
- [x] 호버 애니메이션

---

## 📚 문서화

### 13.1 개발 문서

#### Cursor 작업
- [ ] API 문서 작성
- [ ] 컴포넌트 문서 작성
- [ ] 스타일 가이드 작성
- [ ] 배포 가이드 작성

### 13.2 사용자 문서

#### 문유 작업
- [ ] 사용자 매뉴얼 작성
- [ ] FAQ 작성
- [ ] 문제 해결 가이드
- [ ] 피드백 수집 방법

### 13.3 프로젝트 문서

#### 문유 작업
- [ ] 프로젝트 개요 업데이트
- [ ] 기술 스택 문서
- [ ] 아키텍처 다이어그램
- [ ] 개발 로드맵

---

## 🔄 유지보수 및 업데이트

### 14.1 정기 업데이트

#### Cursor 작업
- [ ] 의존성 업데이트 스케줄
- [ ] 보안 패치 적용
- [ ] 성능 모니터링
- [ ] 사용자 피드백 분석

### 14.2 콘텐츠 업데이트

#### 문유 작업
- [ ] 새로운 트랙 추가 방법
- [ ] 가사 업데이트 프로세스
- [ ] 이미지 업데이트 가이드
- [ ] 메타데이터 관리

### 14.3 기능 확장

#### Cursor 작업
- [ ] 새로운 기능 추가 계획
- [ ] API 확장 가능성
- [ ] 서드파티 통합
- [ ] 성능 개선 계획

---

## ✅ 최종 체크리스트

### 15.1 출시 전 최종 확인

#### 문유 작업
- [ ] 모든 콘텐츠 검토 완료
- [ ] 음원 파일 품질 확인
- [ ] 이미지 파일 최적화 확인
- [ ] 메타데이터 정확성 확인

#### Cursor 작업
- [ ] 모든 기능 테스트 완료
- [ ] 성능 최적화 완료
- [ ] 접근성 준수 확인
- [ ] 크로스 브라우저 호환성 확인

### 15.2 배포 후 확인

#### 문유 작업
- [ ] 도메인 연결 확인
- [ ] SSL 인증서 확인
- [ ] 모바일 앱 설치 테스트
- [ ] 사용자 피드백 수집

#### Cursor 작업
- [ ] 모니터링 시스템 확인
- [ ] 에러 로그 확인
- [ ] 성능 메트릭 확인
- [ ] 백업 시스템 확인

---

## 📞 역할 분담 요약

### 문유 (기획/콘텐츠)
- [ ] 프로젝트 기획 및 요구사항 정의
- [ ] 음원 및 이미지 자산 준비
- [ ] 콘텐츠 작성 (가사, 해석, 프로필)
- [ ] 도메인 및 인프라 설정
- [ ] 사용자 피드백 수집 및 분석

### Cursor (개발/기술)
- [ ] 프로젝트 구조 설계 및 구현
- [ ] UI/UX 컴포넌트 개발
- [ ] 음악 플레이어 기능 구현
- [ ] 성능 최적화 및 테스트
- [ ] 배포 및 모니터링 설정

---

*이 체크리스트는 Moonwave 오안나 음악 플레이어의 완전한 개발을 위한 종합적인 가이드입니다. 각 항목을 체크하면서 프로젝트의 진행 상황을 추적하고, 문유와 Cursor의 역할을 명확히 구분하여 효율적인 협업을 가능하게 합니다.*